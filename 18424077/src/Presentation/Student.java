/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import ValueObjects.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import BussinessLogicLayers.BLL.*;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Nguy Minh Trong
 */
public final class Student extends javax.swing.JInternalFrame {

    private final JFileChooser filestudent;
    private String folder, filename;

    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();
        filestudent = new JFileChooser();
        filestudent.setCurrentDirectory(new File("C:\\Users\\Nguy Minh Trong\\Desktop"));
        filestudent.setFileFilter(new FileNameExtensionFilter("File CSV", "csv"));
        filestudent.setMultiSelectionEnabled(true);
        Loadlistlopcuasinhvien();
        Loadlistlop();
        String malop = cbxLop.getItemAt(1);
        LoadSinhVien(malop);
        cbxLop.removeItemAt(0);
    }

    public void Loadlistlopcuasinhvien() {
        List<ClassObjects> lst = new ClassBLL().getElement();
        for (int i = 0; i < lst.size(); i++) {
            ClassObjects cl = lst.get(i);
            cbbLop.addItem(cl.getMaLop());
        }
    }

    public void Loadlistlop() {
        List<ClassObjects> lst = new ClassBLL().getElement();
        cbxLop.addItem("Bạn hãy chọn lớp");
        for (int i = 0; i < lst.size(); i++) {
            ClassObjects cl = lst.get(i);
            cbxLop.addItem(cl.getMaLop());
        }
    }

    @SuppressWarnings("unchecked")
    public void LoadSinhVien(String malop) {
        List<StudentObjects> lst = new StudentBLL().getElementByMaLop(malop);
        if (lst != null) {
            DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
            model.setRowCount(0);
            String[] columnsName = {"STT", "MSSV", "Họ tên", "Giới tính", "CMND"};
            model.setColumnIdentifiers(columnsName);
            int i = 1;
            for (StudentObjects st : lst) {
                Vector row = new Vector();
                String number = Integer.toString(i);
                row.add(number);
                row.add(st.getMSSV());
                row.add(st.getHoten());
                row.add(st.getGioitinh());
                row.add(st.getCMND());
                model.addRow(row);
                i++;
            }
            tblDanhSach.setModel(model);
        } else {
            DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
            model.setRowCount(0);
            String[] columnsName = {"STT", "MSSV", "Họ tên", "Giới tính", "CMND"};
            model.setColumnIdentifiers(columnsName);
        }
    }

    public void LoadImportFileSinhVien(String file) {
        List<StudentObjects> lst = new StudentBLL().GetElementImportfileCSV(file);
        if (!lst.isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
            model.setRowCount(0);
            String[] columnsName = {"STT", "MSSV", "Họ tên", "Giới tính", "CMND"};
            model.setColumnIdentifiers(columnsName);
            model.setRowCount(0);
            int i = 1;
            for (StudentObjects st : lst) {
                Vector row = new Vector();
                String number = Integer.toString(i);
                row.add(number);
                row.add(st.getMSSV());
                row.add(st.getHoten());
                row.add(st.getGioitinh());
                row.add(st.getCMND());
                model.addRow(row);
                i++;
            }
            tblDanhSach.setModel(model);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RadGroup = new javax.swing.ButtonGroup();
        pnChitietSinhVien = new javax.swing.JPanel();
        lblMSSV = new javax.swing.JLabel();
        lblThongTinSinhVien = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        lblHoTen = new javax.swing.JLabel();
        txtMSSV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        radNam = new javax.swing.JRadioButton();
        radNu = new javax.swing.JRadioButton();
        lblCMND = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbbLop = new javax.swing.JComboBox<>();
        btnLuu = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pnDanhSachSinhVien = new javax.swing.JPanel();
        spDanhSach = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        btnDanhSachLop = new javax.swing.JButton();
        cbxLop = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(1000, 500));

        pnChitietSinhVien.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi Tiết Sinh Viên"));
        pnChitietSinhVien.setName("Chi Tiết Sinh Viên"); // NOI18N
        pnChitietSinhVien.setOpaque(false);

        lblMSSV.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMSSV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMSSV.setText("Mã Số Sinh Viên:");

        lblThongTinSinhVien.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblThongTinSinhVien.setForeground(new java.awt.Color(204, 0, 0));
        lblThongTinSinhVien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThongTinSinhVien.setText("THÔNG TIN SINH VIÊN");

        lblGioiTinh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblGioiTinh.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGioiTinh.setText("Giới Tính:");

        lblHoTen.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblHoTen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHoTen.setText("Họ Tên Sinh Viên:");

        RadGroup.add(radNam);
        radNam.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        radNam.setText("Nam");
        radNam.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        radNam.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        RadGroup.add(radNu);
        radNu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        radNu.setText("Nữ");
        radNu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        radNu.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblCMND.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblCMND.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCMND.setText("CMND:");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Lớp:");

        cbbLop.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnLuu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLuu.setText("Thêm");
        btnLuu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLuu.setBorderPainted(false);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Hủy");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setBorderPainted(false);

        javax.swing.GroupLayout pnChitietSinhVienLayout = new javax.swing.GroupLayout(pnChitietSinhVien);
        pnChitietSinhVien.setLayout(pnChitietSinhVienLayout);
        pnChitietSinhVienLayout.setHorizontalGroup(
            pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChitietSinhVienLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblThongTinSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                        .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                                    .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(radNam, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(radNu, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                                    .addComponent(lblMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                                    .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtHoTen))
                                .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                                    .addComponent(lblCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbbLop, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnChitietSinhVienLayout.setVerticalGroup(
            pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblThongTinSinhVien)
                .addGap(25, 25, 25)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnChitietSinhVienLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblMSSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radNam, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radNu))
                .addGap(18, 18, 18)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbLop, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnChitietSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnDanhSachSinhVien.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Sinh Viên"));

        tblDanhSach.setAutoCreateRowSorter(true);
        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDanhSach.setOpaque(false);
        spDanhSach.setViewportView(tblDanhSach);

        btnDanhSachLop.setText("Import Danh Sách Lớp");
        btnDanhSachLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhSachLopActionPerformed(evt);
            }
        });

        cbxLop.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxLop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxLopItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnDanhSachSinhVienLayout = new javax.swing.GroupLayout(pnDanhSachSinhVien);
        pnDanhSachSinhVien.setLayout(pnDanhSachSinhVienLayout);
        pnDanhSachSinhVienLayout.setHorizontalGroup(
            pnDanhSachSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, 1110, Short.MAX_VALUE)
            .addGroup(pnDanhSachSinhVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxLop, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDanhSachLop, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnDanhSachSinhVienLayout.setVerticalGroup(
            pnDanhSachSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDanhSachSinhVienLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(pnDanhSachSinhVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDanhSachLop, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(cbxLop))
                .addGap(18, 18, 18)
                .addComponent(spDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(394, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnChitietSinhVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnDanhSachSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnChitietSinhVien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnDanhSachSinhVien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String filename(String str, char sep, char ext) {
        String fullpath = str;
        int dot1 = fullpath.lastIndexOf(ext);
        int sep1 = fullpath.lastIndexOf(sep);
        return fullpath.substring(sep1 + 1, dot1);
    }

    private void btnDanhSachLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhSachLopActionPerformed
        int returnvalue = filestudent.showOpenDialog(this);
        if (returnvalue == JFileChooser.APPROVE_OPTION) {
            File[] files = filestudent.getSelectedFiles();
            for (File file : files) {
                try {
                    filename = file.toString();
                    String fi = filename(filename, '\\', '.');
                    ClassObjects cl = new ClassObjects();
                    cl.setMaLop(fi);
                    new ClassBLL().Insert(cl);
                    List<StudentObjects> lstimportdanhsach = new StudentBLL().GetElementImportfileCSV(filename);
                    int size = lstimportdanhsach.size();
                    for(int i = 0; i < size; i++)
                    {
                        StudentObjects st = new StudentObjects();
                        st.setMSSV(lstimportdanhsach.get(i).getMSSV());
                        st.setHoten(lstimportdanhsach.get(i).getHoten());
                        st.setGioitinh(lstimportdanhsach.get(i).getGioitinh());
                        st.setCMND(lstimportdanhsach.get(i).getCMND());
                        st.setClassName(fi);
                        new StudentBLL().Insert(st);
                    }
                    LoadSinhVien(fi);
                    cbbLop.removeAllItems();
                    cbxLop.removeAllItems();
                    Loadlistlop();
                    Loadlistlopcuasinhvien();
                    cbxLop.removeItemAt(0);
                    cbxLop.setSelectedItem(fi);
                } catch (Exception ex) {
                    ex.getMessage();
                }
            }
        }
    }//GEN-LAST:event_btnDanhSachLopActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        StudentObjects st = new StudentObjects();
        st.setMSSV(txtMSSV.getText());
        st.setHoten(txtHoTen.getText());
        if(radNam.isSelected())
        {
            st.setGioitinh((short)0);
        }
        else
        {
            st.setGioitinh((short)1);
        }
        st.setCMND(txtCMND.getText());
        st.setClassName((String)cbbLop.getSelectedItem());
        boolean KQ = new StudentBLL().Insert(st);
        if(KQ == true)
        {
            JOptionPane.showMessageDialog(this, "Bạn đã nhập thành công");
            LoadSinhVien((String)cbbLop.getSelectedItem());
            cbxLop.setSelectedItem((String)cbbLop.getSelectedItem());
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Bạn đã nhập không thành công");
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void cbxLopItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxLopItemStateChanged
        filename = (String)cbxLop.getSelectedItem();
        LoadSinhVien(filename);
    }//GEN-LAST:event_cbxLopItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup RadGroup;
    private javax.swing.JButton btnDanhSachLop;
    private javax.swing.JButton btnLuu;
    private javax.swing.JComboBox<String> cbbLop;
    private javax.swing.JComboBox<String> cbxLop;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCMND;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMSSV;
    private javax.swing.JLabel lblThongTinSinhVien;
    private javax.swing.JPanel pnChitietSinhVien;
    private javax.swing.JPanel pnDanhSachSinhVien;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radNu;
    private javax.swing.JScrollPane spDanhSach;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMSSV;
    // End of variables declaration//GEN-END:variables
}
